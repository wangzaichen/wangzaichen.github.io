<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小车苏喂</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-06T08:09:29.283Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>xiaochesuwei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pip升级报错cannot import name &#39;FormatControl&#39;，解决办法</title>
    <link href="http://example.com/2022/01/06/pip%E5%8D%87%E7%BA%A7%E6%8A%A5%E9%94%99cannot-import-name-FormatControl-%EF%BC%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://example.com/2022/01/06/pip%E5%8D%87%E7%BA%A7%E6%8A%A5%E9%94%99cannot-import-name-FormatControl-%EF%BC%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2022-01-06T08:05:56.000Z</published>
    <updated>2022-01-06T08:09:29.283Z</updated>
    
    <content type="html"><![CDATA[<p>参考以下地址：<a href="https://pypi.org/project/pip/19.1.1/#modal-close">https://pypi.org/project/pip/19.1.1/#modal-close</a></p><span id="more"></span><p><img src="/2022/01/06/pip%E5%8D%87%E7%BA%A7%E6%8A%A5%E9%94%99cannot-import-name-FormatControl-%EF%BC%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/pip.png" alt="image"><br>原因：pip安装包已经损坏==不要随便升级不要随便升级不要随便升级，重要的事情讲三遍。<br>cmd切换到对应目录下，运行python setup.py install 安装<br>安装完成后pip list查看当前版本，ok</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;参考以下地址：&lt;a href=&quot;https://pypi.org/project/pip/19.1.1/#modal-close&quot;&gt;https://pypi.org/project/pip/19.1.1/#modal-close&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>HEXO常用命令</title>
    <link href="http://example.com/2022/01/06/HEXO%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2022/01/06/HEXO%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-01-06T07:13:10.994Z</published>
    <updated>2022-01-06T07:44:38.027Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 常用命令</p><span id="more"></span><p>正文</p><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装  </span><br><span class="line">npm update hexo -g #升级  </span><br><span class="line">hexo init #初始化</span><br></pre></td></tr></table></figure><h2 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h2><p>hexo n “我的博客” == hexo new “我的博客” #新建文章<br>hexo p == hexo publish<br>hexo g == hexo generate#生成<br>hexo s == hexo server #启动服务预览<br>hexo d == hexo deploy#部署</p><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。<br>hexo server -s #静态模式<br>hexo server -p 5000 #更改端口<br>hexo server -i 192.168.1.1 #自定义 IP</p><p>hexo clean #清除缓存 网页正常情况下可以忽略此条命令<br>hexo g #生成静态网页<br>hexo d #开始部署</p><h2 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h2><p>hexo generate #使用 Hexo 生成静态文件快速而且简单<br>hexo generate –watch #监视文件变动</p><h2 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">两个命令的作用是相同的</span><br><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br></pre></td></tr></table></figure><p>参考链接:<a href="https://segmentfault.com/a/1190000002632530">https://segmentfault.com/a/1190000002632530</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hexo 常用命令&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="http://example.com/categories/Diary/"/>
    
    
    <category term="Games" scheme="http://example.com/tags/Games/"/>
    
  </entry>
  
  <entry>
    <title>职业规划</title>
    <link href="http://example.com/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/"/>
    <id>http://example.com/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/</id>
    <published>2021-12-07T12:40:31.000Z</published>
    <updated>2022-01-06T07:37:41.283Z</updated>
    
    <content type="html"><![CDATA[<p>元宇宙下（Metaverse）</p><span id="more"></span><p>元宇宙下</p><h1 id="元宇宙下（Metaverse）"><a href="#元宇宙下（Metaverse）" class="headerlink" title="元宇宙下（Metaverse）"></a>元宇宙下（Metaverse）</h1><h2 id="职业规划"><a href="#职业规划" class="headerlink" title="职业规划"></a>职业规划</h2><h3 id="01认清自己-确认方向"><a href="#01认清自己-确认方向" class="headerlink" title="01认清自己 确认方向"></a>01认清自己 确认方向</h3><p><img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo01.png" alt="demo01"></p><h3 id="02收集信息，心中有数"><a href="#02收集信息，心中有数" class="headerlink" title="02收集信息，心中有数"></a>02收集信息，心中有数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">即便你很优秀、有一份傲人的成绩单、斩获了无数奖项，也不代表你能找到一份好工作，</span><br><span class="line">因为没有早早准备而错过好机会的学霸大有人在。一般来说好的公司好的职位都有很多</span><br><span class="line">人抢着进，当你回过神想找的时候，名额早就被瓜分的所剩无几了</span><br></pre></td></tr></table></figure><ul><li><p>每周花个一小时想想未来做什么</p></li><li><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>  把市面上跟你预想得未来职业发展相关的企业搜索出来。</p><p>  但是中国有那么多企业，如何搜呢？</p><p>  1、参考你学长学姐进入的公司</p><p>  2、与你专业相关的top10-top20企业</p><p>  3、你想进的公司（比如你学的是是市场营销，但是你就想进入谷歌），想出20个</p></li></ul><h4 id="学会制作EXCEL"><a href="#学会制作EXCEL" class="headerlink" title="学会制作EXCEL"></a>学会制作EXCEL</h4><p><img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo02.png" alt="demo02"></p><pre><code>学历确实是敲门砖，但是工作更多的是看你的综合能力。你学历不突出，但是业务能力/技术能力很强，国内的一线互联网还是都能进的。PS: 只要JD上没有明确要求985/211学校，你基本上都可以试试看</code></pre><ul><li><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>  你未来想去的企业大致选好个20-30家，就可以开始列一个表，他们的校招期什么时候，是否有暑期实习生，是否有符合你专业或者你兴趣的职位。</p><p>  根据企业的官网、招聘网站、企业招聘的微信公众号都可以搜索到这些信息，特别是校招时间点，微信公众号已经成为各大企业的第一时间发布渠道</p><pre><code>  比如今日头条的招聘微信公众号名称：字节跳动招聘  IBM的招聘微信公众号名称：IBM招聘  蚂蚁金服：蚂蚁小招/  美团点评：美团点评招聘/  拼多多:拼多多招聘  腾讯：腾讯招聘</code></pre><p>  <img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo03.png" alt="demo03"></p></li></ul><h5 id="时间、要求、城市"><a href="#时间、要求、城市" class="headerlink" title="时间、要求、城市"></a>时间、要求、城市</h5><h4 id="社会招聘"><a href="#社会招聘" class="headerlink" title="社会招聘"></a>社会招聘</h4><p>同时，我也辅导过很多有多年工作经历的小伙伴，他们离职大多是由于以下两点原因：</p><p>1、觉得自己不适合现在的工作，想要转型；</p><p>2、寻求更好的薪资及职位；</p><p>（工作不开心，薪资太少，工作发展受限等统统包含在这两点中）</p><p>关于第一点，转型需要做哪些工作，下面这篇文章写得非常详细，我就不在过多阐述了。虽然是写关于数据分析师的，但里面的思路和方法论还是可以套用到其他岗位上。</p><p>如何自信又有把握地转型为数据分析师？（干货分享）</p><p>而第二点，更是很多人的诉求。在这里我要和大家重点强调，就算你近三年没有任何想要跳槽的想法，你都需要每三个月在市场看看与你相关的职位，薪资水平还有整体发展。每半年你都需要去面试几家公司，来思考你自己在市场中的实际价值以及你的能力是否能适应现在的就业市场。</p><p>之前的甲骨文裁员闹得沸沸扬扬，有人早早就跳坑，找到新东家，并且薪资还增长了不少。而有人离职后找了许久，都找不到工作。</p><p>其中很大一部分原因是因为有的员工只会安安静静做着分内的工作，以为现在的工作如果舒服就可以一直做到退休。但不知道，其他公司相同的岗位需要哪些技能，自己有没有在哪些方面已经跟不上时代的变化了。</p><p>有些人未雨绸缪，所以顺利度过中年危机。</p><p>有些人临渴掘井，被通知裁员了只能措手不及。</p><p>这就差距的来源。</p><p><strong>我把一份表格转给了她，让她搜出自己想进的和相关职位的公司JD，整理个大概20家。把这20家信息整理成表格，然后针对这些岗位职责、任职要求进行剖析，如果能在短期内弥补自己不足的就尽量补足。比如JD要求你要精通SQL，那你就去这段时间刷刷数据社区的SQL50道题，大概两周就能熟练掌握了。</strong><br><img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo04.png" alt="demo04"></p><p><strong>针对每一个JD都要重新对应一份简历，很多时候HR和招聘部门往往看重简历与JD的匹配性，</strong></p><h3 id="03目标设远，步步拆解"><a href="#03目标设远，步步拆解" class="headerlink" title="03目标设远，步步拆解"></a>03目标设远，步步拆解</h3><p>在一家公司里，越是走上高位的人，越是把计划的时间拉长。一线员工在做计划时基本上会做月度计划，而一名总监需要做年度计划，<strong>而到CxO级别都需要做到3-5年的计划</strong>。</p><p>那些能把计划做得长远的人，往往就是公司中最核心、最重要的人。毕竟能提前计划好未来并备有应对各种情况的人是很稀缺的。</p><p>但是个人相比公司而言好控制多了，你只要负责对自己做计划，管理，执行，复盘就可以了。所以我们需要好好对自己做一份计划。</p><p><strong>执行力需要超强</strong></p><p><img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo05.png" alt="demo01"></p><h3 id="04盘点能力，补足短板"><a href="#04盘点能力，补足短板" class="headerlink" title="04盘点能力，补足短板"></a>04盘点能力，补足短板</h3><h4 id="来年PPT进行找工作"><a href="#来年PPT进行找工作" class="headerlink" title="来年PPT进行找工作"></a><strong>来年PPT进行找工作</strong></h4><p>一个人的职业生涯要想顺利，就不能在自己工作的领域有明显的短板。体现在职业规划上，就是需要明确自己当前的技能相对于这个领域还有哪些不足，然后罗列这些不足点，一项项的攻克。你在这个领域的盲点和短板越少，你在未来发展中面对竞争对手的优势就越大。</p><p>比如我作为一个数据部门的负责人，自己的长处是对于数据很敏感而且很有想法。但刚刚开始时，我发现自己写汇报PPT，做演讲的能力还非常不足。这会制约我将数据分析结论落地的能力。于是我自己在工作之余，额外自学如何能撰写出一个精干、吸引人的PPT以及如何成为一个好的演讲者，并每天持之以恒地练习。最终，当我能够自如地编写项目总结PPT并能游刃有余地向高层领导汇报的时刻，就是我从一众工程师中脱颖而出的时刻。</p><p>在此我给大家准备了这张表格，大家可以试着评估下自己目前的软能力。</p><p><img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo06.png" alt="demo01"><br><img src="/2021/12/07/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/demo07.png" alt="demo01"></p><h3 id="05学会展望，调整方向"><a href="#05学会展望，调整方向" class="headerlink" title="05学会展望，调整方向"></a>05学会展望，调整方向</h3><p><strong>某时，人的眼光是有局限性的。</strong>随着自己见识的增广，能力的提升，我们总能看到更远的未来。这个时候，就需要及时微调自己设置的职业规划，让自己不会被时代和大趋势抛弃。</p><p>改变总是艰难的，但改变是必须的。</p><p>希望我们每个人都要珍惜自己的时间，充实自己，无论是人生还是职场生涯，尽量过得精彩一点。因为我们只能“活一次”</p><hr><h1 id="产品至上"><a href="#产品至上" class="headerlink" title="产品至上"></a>产品至上</h1><ul><li>认清自己，确认方向。按照职业规划探寻模型来思考</li><li>收集信息，心中有数。校招/社招/JD</li><li>目标设远，步步拆解。拆解框架：时间/目标/准备(技术能力、汇报能力|领导能力、沟通能力、团队建设能力)</li><li>盘点能力，补足短板。</li><li>学会展望，调整方向。唯一不可阻挡的是时间</li></ul><h2 id="思维"><a href="#思维" class="headerlink" title="思维"></a>思维</h2><p><a href="https://www.zhihu.com/question/30173526?utm_source=wechat_session&utm_medium=social&utm_oi=832366521421537280">如何解决思维混乱、讲话没条理的情况？</a></p><p>结构化思维-&gt;讲话有条理。</p><p><a href="https://www.zhihu.com/question/30173526?utm_source=wechat_session&utm_medium=social&utm_oi=832366521421537280">哪些思维方式是你刻意训练过的</a>？</p><p>结构化思维<br>金字塔思维：结论先行，以上统下，归类分组，逻辑递进。<br>金字塔结构：纵向延伸，横向分类。<br>如何得出金字塔结论：归纳法，演绎推理法。实际生活中，不是每时每刻都有相关的模型套用和演绎法的，这时候就用归纳法，自下而上进行梳理，得出结论，比如头脑风暴把闪过的碎片想法全部写下来，再抽象与分类，最后得出结论。</p><p><a href="https://www.zhihu.com/question/304174916/answer/542373452">厉害的人是怎么分析问题的？</a></p><p>定义问题/描述问题：问题的本质是现实和期望的落差部分；明确期望值B’，精准定位现状B，，用B—&gt;B’这个落差，精准描述问题。<br>分析问题/解决问题：不能从现状B出发，找寻一条B—&gt;B’的路径，要透过现象看本质。方法A，现实B，期望B’，变量C。校准期望B’，重构方法A，消除变量C。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;元宇宙下（Metaverse）&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>feature map 计算方法</title>
    <link href="http://example.com/2021/06/30/featuremap/"/>
    <id>http://example.com/2021/06/30/featuremap/</id>
    <published>2021-06-30T08:22:51.858Z</published>
    <updated>2022-01-06T08:00:14.688Z</updated>
    
    <content type="html"><![CDATA[<p>feature map 计算方法</p><span id="more"></span><h2 id="feature-map-计算方法"><a href="#feature-map-计算方法" class="headerlink" title="feature map 计算方法"></a>feature map 计算方法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">卷积层的feature map的变长为：conv1_h=（32-5）/1 + 1 = 28 </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;feature map 计算方法&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="http://example.com/categories/Diary/"/>
    
    
    <category term="PS3" scheme="http://example.com/tags/PS3/"/>
    
    <category term="Games" scheme="http://example.com/tags/Games/"/>
    
  </entry>
  
  <entry>
    <title>损失函数目标函数</title>
    <link href="http://example.com/2021/06/30/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E7%9B%AE%E6%A0%87%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2021/06/30/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E7%9B%AE%E6%A0%87%E5%87%BD%E6%95%B0/</id>
    <published>2021-06-30T06:46:13.000Z</published>
    <updated>2021-06-30T08:10:49.661Z</updated>
    
    <content type="html"><![CDATA[<p>损失函数==代价函数</p><span id="more"></span><h1 id="损失函数-代价函数"><a href="#损失函数-代价函数" class="headerlink" title="损失函数==代价函数"></a>损失函数==代价函数</h1><p>首先给出结论：损失函数和代价函数是同个东西，目标函数是一个与他们相关但更广的概念，对于目标函数来说在有约束条件下的最小化就是损失函数（ loss function）</p><p>（图片来自 Andrew Ng Machine Learning公开课视频）<br><img src="https://pic4.zhimg.com/80/v2-3f4959cd70308df496ecc4568a0d982d_720w.jpg?source=1940ef5c" alt="avatar"></p><p>上面三个图的函数依次为f1（x），f2（x），f3（x）。我们是想用这三个函数分别来拟合Pce Pice的真实值记为Y我们给定c，这三个函数都会输出一个∫（X）这个输出的∫（X）与真实值Y可能是相同的，也可能是不同的，为了表示我们拟合的好坏，我们就用—个函数来度量拟合的程度，比如L（Y,f（X）=（Y-f（X）^2，这个函数就称为损失函数（ loss function），或者叫代价函数（ cost function）。损失函数越小，就代表模型拟合的越好那是不是我们的目标就只是让 loss function越小越好呢？还不是.</p><p>另一个概念 <strong>风险函数</strong>。 他是损失函数的期望。我们的输入输出是一个（X,Y）尊崇联合分布，一个函数的平均损失称作（经验风险）即，<br>$\frac { 1 } { N } \sum _ { i = 1 } ^ { N } L ( y _ { i } , {f ( x _ { i } )} )$  所以我们的目标是最小化<br>$\frac { 1 } { N } \sum _ { i = 1 } ^ { N } L ( y _ { i } , {f ( x _ { i } )} )$ </p><p>我们称之为<em><strong>经验风险最小化</strong></em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;损失函数==代价函数&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="http://example.com/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>卷积和反卷积</title>
    <link href="http://example.com/2021/06/08/%E5%8D%B7%E7%A7%AF%E5%8F%8D%E5%8D%B7%E7%A7%AF/"/>
    <id>http://example.com/2021/06/08/%E5%8D%B7%E7%A7%AF%E5%8F%8D%E5%8D%B7%E7%A7%AF/</id>
    <published>2021-06-08T01:31:57.201Z</published>
    <updated>2021-06-30T08:14:55.303Z</updated>
    
    <content type="html"><![CDATA[<p>卷积反卷积计算方法</p><span id="more"></span><p>正文</p><h2 id="什么是-反卷积"><a href="#什么是-反卷积" class="headerlink" title="什么是 反卷积"></a>什么是 反卷积</h2><h3 id="上采样（Upsample）"><a href="#上采样（Upsample）" class="headerlink" title="上采样（Upsample）"></a>上采样（Upsample）</h3><p> 计算机视觉 深度学习领域， 由于输入图像通过卷积神经网络（CNN）提取特征后<br>  输出尺寸往往会变小，而有时我们需要将图像恢复到原来尺寸<br>  扩大图像尺寸，实现图像由小分辨率到大分辨率的映射操作 即叫做上采样（Upsample）</p><h3 id="反卷积（Transfer-Convloution）"><a href="#反卷积（Transfer-Convloution）" class="headerlink" title="反卷积（Transfer Convloution）"></a>反卷积（Transfer Convloution）</h3><p>  上采样有3种常见的方法：双线性插值（ bilinear），反卷积（ Transposed Convolution），反池化Unpooling），我们这里只讨论反卷积。这里指的反卷积，也叫转置卷积，它并不是正向卷积的完全逆过程，用一句话来解释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">反卷积是种特殊的正向卷积，先按照定的比例通过补0来扩大输入图像的尺寸，</span><br><span class="line">接看旋转卷积核，再进行正向卷积。</span><br></pre></td></tr></table></figure><hr><h2 id="反卷积的数学推导"><a href="#反卷积的数学推导" class="headerlink" title="反卷积的数学推导"></a>反卷积的数学推导</h2><p>输入图像 $input$ 尺寸$4 \times 4$ 元素矩阵为：<br>$$<br>\text { input }=\left[\begin{array}{cccc}<br>x_{1} &amp; x_{2} &amp; x_{3} &amp; x_{4} \<br>x_{5} &amp; x_{6} &amp; x_{7} &amp; x_{8} \<br>x_{9} &amp; x_{10} &amp; x_{11} &amp; x_{12} \<br>x_{13} &amp; x_{14} &amp; x_{15} &amp; x_{16}<br>\end{array}\right]<br>$$<br>卷积核 $kernel$ 尺寸是 $3\times3$</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;卷积反卷积计算方法&lt;/p&gt;</summary>
    
    
    
    <category term="Diary" scheme="http://example.com/categories/Diary/"/>
    
    
    <category term="PS3" scheme="http://example.com/tags/PS3/"/>
    
    <category term="Games" scheme="http://example.com/tags/Games/"/>
    
  </entry>
  
</feed>
